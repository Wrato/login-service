plugins {
	id 'java'
	id 'org.springframework.boot' version '2.5.14'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'jacoco'
}

group = 'cl.fernando'
version = '0.0.1-SNAPSHOT'
description = 'Microservice for user registration, authentication, and user information retrieval'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(11)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // H2 DB
    runtimeOnly 'com.h2database:h2'

    // BCrypt para encriptar contraseñas
    implementation 'org.springframework.security:spring-security-crypto'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // JWT (jjwt)
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // ModelMapper
    implementation 'org.modelmapper:modelmapper:3.1.1'

    // Testing (solo este starter es suficiente)
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Mockito adicional (opcional, ya viene incluido pero más actualizado)
    testImplementation 'org.mockito:mockito-core:5.11.0'
	testImplementation 'org.mockito:mockito-inline:5.2.0'
	testImplementation 'net.bytebuddy:byte-buddy:1.14.12'
	testImplementation 'net.bytebuddy:byte-buddy-agent:1.14.12'
	
}

test {
	useJUnitPlatform()
	
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = "0.8.10"
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required = true
		csv.required = false
		html.required = true
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.80
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification

tasks.named('test') {
	useJUnitPlatform()
}

tasks.withType(JavaCompile) {
	options.compilerArgs << "-parameters"
}